@model KutuphaneCoresuz.Models.Data.Uye

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Create";
}

@Html.Partial("~/Views/Shared/_HeaderAdmin.cshtml");

<style type="text/css">
    tr td p {
        background-color: #10707f;
        color: aliceblue;
    }

    table tr td input {
        background-color: aliceblue;
        color: #10707f;
        margin: 0;
        padding: 0;
        width: 100%;
        height: 50px;
        border-radius: 5px;
    }
</style>
<br />
<br />
<br />


<div align="center">


    @using (Html.BeginForm("AddUyeAdmin", "Admin", FormMethod.Post))
    {
        <div class="form-group">
            <table class=" table-hover" style="width:30%; padding:0; position:absolute; left:0" cellspacing="0" cellpadding="0">
                <tr>
                    <td>
                        <p>
                            @Html.Label("Üye İsim")
                        </p>
                    </td>
                    <td>
                       
                            @Html.EditorFor(model => model.isim, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.isim, "", new { @class = "text-danger" })
                       

                    </td>
                </tr>
                <tr>
                    <td>
                        <p>
                            @Html.Label(" Üye Kullanıcı Adı:")
                        </p>
                    </td>
                    <td>
                        
                            @Html.EditorFor(model => model.KullaniciAdi, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.KullaniciAdi, "", new { @class = "text-danger" })
                       
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>
                            @Html.Label("Üye Soyisim:")
                        </p>
                    </td>
                    <td>

                       
                            @Html.EditorFor(model => model.Soyisim, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Soyisim, "", new { @class = "text-danger" })
                        
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>
                            @Html.Label("Sifreniz")
                        </p>
                    </td>
                    <td>
                      
                            @Html.PasswordFor(model => model.Sifre, new { htmlAttributes = new { id = "KullaniciGirisSifre", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Sifre, "", new { @class = "text-danger" })
                        

                    </td>
                <tr>
                    <td>
                        <p>
                            @Html.Label("Sifreniz (Tekrar)")
                        </p>
                    </td>
                    <td>
                      
                            @Html.PasswordFor(model => model.Sifre, new { htmlAttributes = new { id = "sifreTekrar", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Sifre, "", new { @class = "text-danger" })
                       
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>
                            @Html.Label("Emailiniz")
                        </p>
                    </td>
                    <td>
                        
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                      
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>
                            @Html.Label("Açıklama:")
                        </p>
                    </td>
                    <td>
                       
                            @Html.EditorFor(model => model.Aciklama, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Aciklama, "", new { @class = "text-danger" })
                     
                    </td>

                </tr>
                <tr>
                    <td colspan="2">
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Kaydet" class="btn btn-warning" id="btn-kaydet" /><form action="Login">
                                    <button class="btn btn-warning " type="button">Giriş Yap</button>
                                </form>
                            </div>
                        </div>
                    </td>
                </tr>
            </table>
        </div>






    }



</div>


@*</div>
        </div>
    </div>
    </div>*@



@section Scripts
        {
    <script type="text/javascript">
        document.ready(function () {

            $('#btn-kaydet').mousedown(function () {
                var adi = $('#kullaniciAdi').value;
                var sifre = $('#sifre').value;
                var tsifre = $('#sifreTekrar').value;
                var hata = new Array();

                if (adi == "")
                    hata.push('Lütfen adı boş geçmeyiniz');
                else if (adi.length < 4)
                    hata.push('Lütfen adı alanını 3 karakterden büyük giriniz');

                if (sifre == '')
                    hata.push('Şifre alanını boş geçmeyiniz');
                else {
                    if (sifre != tsifre)
                        hata.push('Şifreler aynı olmalıdır.');

                    else if (sifre.length < 8)
                        hata.push('Şifre 8 karekter veya daha büyük olmalıdır.');

                    else if (sifre.search(/[a-z]/) < 0)
                        hata.push("Şifre en az bir Küçük harf içermelidir.");

                    else if (sifre.search(/[A-Z]/) < 0)
                        hata.push("Şifre en az bir Büyük harf içermelidir.");

                    else if (sifre.search(/[0-9]/) < 0)
                        hata.push("Şifre en az bir rakam içermelidir.");

                    else if (sembolvar == false)
                        hata.push("Şifre en az bir sembol içermelidir.");


                }

                if (hata.length > 0) {
                    alert(hata.join("\n"));
                    return false;
                }
                else alert('Tamam şifre uygun'); //buraya return true diyebiliriz
            });
        }



    </script>

}




